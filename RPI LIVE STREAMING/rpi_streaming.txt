The project consists of three basic parts:
1)Setting up a Raspberry Pi as a Wireless Access Point
2)Setting up an Apache Web Server on a Raspberry Pi
3)Build a Raspberry Pi Camera Module Server 

System update -> sudo apt-get update
                 sudo apt-get upgrade

##############################################################
1)Setting up a Raspberry Pi as a Wireless Access Point
 

-To create an access point, we'll need DNSMasq and HostAPD -> sudo apt install dnsmasq hostapd

(Stop the services until we're done with their configuration files -> sudo systemctl stop dnsmasq , sudo systemctl stop hostapd)
----------------------------------------------
-Configuring a static IP -> sudo nano /etc/dhcpcd.conf and at the end of the file we add the 3 lines below:

interface wlan0
    static ip_address=192.168.4.1/24
    nohook wpa_supplicant

and then restart -> sudo service dhcpcd restart
-----------------------------------------------
-Configuring the DHCP server (dnsmasq): **if we need the original config file we may want to make a backup -> sudo mv /etc/dnsmasq.conf /etc/dnsmasq.conf.orig**

Open the new configuration file -> sudo nano /etc/dnsmasq.conf
and add these two lines: 
  interface=wlan0      
  dhcp-range=192.168.4.2,192.168.4.20,255.255.255.0,24h

and then reload the service -> sudo systemctl reload dnsmasq
-------------------------------------------------
-Configuring the access point host software (hostapd)

Open the configuration file -> sudo nano /etc/hostapd/hostapd.conf

and add the following lines:

interface=wlan0
driver=nl80211
ssid=NameOfNetwork
hw_mode=g
channel=7
wmm_enabled=0
macaddr_acl=0
auth_algs=1
ignore_broadcast_ssid=0
wpa=2
wpa_passphrase= networkpassword
wpa_key_mgmt=WPA-PSK
wpa_pairwise=TKIP
rsn_pairwise=CCMP

After that we need to tell the system where to find this file. Open -> sudo nano /etc/default/hostapd
and replace the  #DAEMON_CONF line with DAEMON_CONF="/etc/hostapd/hostapd.conf" 
Start the service-> sudo systemctl unmask hostapd
                    sudo systemctl enable hostapd
                    sudo systemctl start hostapd
-----------------------------------------
-Add routing and masquerade

Edit /etc/sysctl.conf and uncomment this line -> net.ipv4.ip_forward=1

Add a masquerade for outbound traffic on eth0 -> sudo iptables -t nat -A  POSTROUTING -o eth0 -j MASQUERADE

Save the iptables rule -> sudo sh -c "iptables-save > /etc/iptables.ipv4.nat"

Edit /etc/rc.local and add this just above "exit 0" to install these rules on boot -> iptables-restore < /etc/iptables.ipv4.nat

#####################################################################################
2)Setting up an Apache Web Server on a Raspberry Pi

-Install the apache2 package with this command -> sudo apt install apache2 -y
  
By default, Apache puts a test HTML file in the web folder. This default web page is served when you browse 
to http://localhost/ on the Pi itself, or http://192.168.4.1 ( or whatever the Pi's static IP address is) 
from another computer on the network.

(This default web page is just an HTML file on the filesystem. It is located at /var/www/html/. You can put your own 
 files and other assets in this directory and serve them as a website on your local network.)

#################################################################
3)Build a Raspberry Pi Camera Module Server

-Install the following packages -> sudo apt install autoconf automake build-essential pkgconf libtool git libzip-dev libjpeg-dev gettext libmicrohttpd-dev libavformat-dev libavcodec-dev libavutil-dev libswscale-dev libavdevice-dev default-libmysqlclient-dev libpq-dev libsqlite3-dev libwebp-dev
----------------------------------------------------------------------
-Download the Motion deb file from the GitHub and install it using the dpkg command.
->sudo wget https://github.com/Motion-Project/motion/releases/download/release-4.2.2/pi_buster_motion_4.2.2-1_armhf.deb
->sudo dpkg -i pi_buster_motion_4.2.2-1_armhf.deb

-> sudo nano /etc/motion/motion.conf
and change these lines as follows: daemon on
                                   stream_localhost off
-----------------------------------------------------------------------
-Now we need to setup up the daemon. Edit the motion file.
 -> sudo nano /etc/default/motion
Find the following line and change it to the following:
start_motion_daemon=yes
(you can also make changes to the frames,width,height etc. of the stream) 
Start the service -> sudo service motion start(or restart)
------------------------------------------------------------------------
-Hardware camera
Connect the camera to the pi
->sudo raspi_config  and enable the camera module
->sudo modprobe bcm2835-v4l2 (or ->sudo nano /etc/modules and add the following line at the end if it doesn't exist: bcm2835-v4l2)
 
REBOOT THE PI -> sudo reboot

 
!!You should now be able to access the Raspberry Pi webcam stream by going to the Piâ€™s IP address on port 8081!!
